C51 COMPILER V9.01   DA_AD                                                                 04/27/2016 23:58:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DA_AD
OBJECT MODULE PLACED IN DA-AD.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE DA-AD.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************************************************************************
   2          *  标题:       ************* DA-AD试验*******************                         *
   3          *                                                                                                                                                                 *
   4          *   1.通过本例程了解并掌握AD-DA转换芯片的基本原理和使用                                                   *
   5          *   2.了解掌握I2C总线接口的工作原理及一般编程方法。                                                               *
   6          *                                                                                                                                                         *
   7          *    连接方法：参照接线图                                                                 *
   8          *                                                                                                                                                         *
   9          * 通过改变学习板上的2个电位器对应的2段模拟输入，实现模拟输入，学员观察数码管的数字变化情况
  10          * 通过改D[4]的值，实现模拟输出，学员观察学习板上DA处LED的亮度变化                                 *
  11          *                                 *                                                                                                                               *
  12          * 注意：I2C驱动程序只能在12T模式下工作   6T模式自己修改相应时序                   *                          
             -                                                         *
  13          * 请学员认真消化本例程，懂得AD-DA 在C语言中的操作应用                             *
  14          ***********************************************************************************/
  15          
  16          #include<reg52.h>
  17          #include <I2C.H>
  18          #include<math.h>
  19          #define  PCF8591 0x90    //PCF8591 地址
  20          
  21          
  22          //else IO
  23          sbit    LS138A=P2^2;  
  24          sbit    LS138B=P2^3;
  25          sbit    LS138C=P2^4;  
  26          
  27          //此表为 LED 的字模, 共阴数码管 0-9  - 
  28          unsigned char code Disp_Tab[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f}; 
  29          unsigned char   AD_CHANNEL=0;
  30          unsigned int  D[32];
  31                  unsigned char xx=255;    
  32          
  33          /*******************************************************************
  34          DAC 变换, 转化函数               
  35          *******************************************************************/
  36          bit DACconversion(unsigned char sla,unsigned char c,  unsigned char Val)
  37          {
  38   1         Start_I2c();              //启动总线
  39   1         SendByte(sla);            //发送器件地址
  40   1         if(ack==0)return(0);
  41   1         SendByte(c);              //发送控制字节
  42   1         if(ack==0)return(0);
  43   1         SendByte(Val);            //发送DAC的数值  
  44   1         if(ack==0)return(0);
  45   1         Stop_I2c();               //结束总线
  46   1         return(1);
  47   1      }
  48          
  49          /*******************************************************************
  50          ADC发送字节[命令]数据函数               
  51          *******************************************************************/
  52          bit ISendByte(unsigned char sla,unsigned char c)
  53          {
  54   1         Start_I2c();              //启动总线
C51 COMPILER V9.01   DA_AD                                                                 04/27/2016 23:58:04 PAGE 2   

  55   1         SendByte(sla);            //发送器件地址
  56   1         if(ack==0)return(0);
  57   1         SendByte(c);              //发送数据
  58   1         if(ack==0)return(0);
  59   1         Stop_I2c();               //结束总线
  60   1         return(1);
  61   1      }
  62          
  63          /*******************************************************************
  64          ADC读字节数据函数               
  65          *******************************************************************/
  66          unsigned char IRcvByte(unsigned char sla)
  67          {  unsigned char c;
  68   1      
  69   1         Start_I2c();          //启动总线
  70   1         SendByte(sla+1);      //发送器件地址
  71   1         if(ack==0)return(0);
  72   1         c=RcvByte();          //读取数据0
  73   1      
  74   1         Ack_I2c(1);           //发送非就答位
  75   1         Stop_I2c();           //结束总线
  76   1         return(c);
  77   1      }
  78          void SendOneByte(unsigned char c)
  79          {
  80   1          SBUF = c;
  81   1          while(!TI);
  82   1          TI = 0;
  83   1      }
  84          /****************************************************************
  85           定时器0中断
  86          *****************************************************************/
  87          void Timer0Init(void)           //50毫秒@11.0592MHz
  88          {
  89   1              TMOD &= 0xF0;           //设置定时器模式
  90   1              TMOD |= 0x01;           //设置定时器模式
  91   1              TL0 = 0xB0;             //设置定时初值
  92   1              TH0 = 0x3C;             //设置定时初值
  93   1              TF0 = 0;                //清除TF0标志
  94   1              TR0 = 1;                //定时器0开始计时
  95   1              ET0=1;
  96   1      }
  97          void T0_interrupt(void) interrupt 1       
  98          {
  99   1              static time_count=0;
 100   1      
 101   1              TF0=0;           
 102   1              time_count++;
 103   1              TL0 = 0x00;             //设置定时初值
 104   1              TH0 = 0x4C;             //设置定时初值
 105   1              if(time_count==1)
 106   1              {
 107   2                      P0=0;                 // 屏蔽干扰
 108   2                      time_count=0;
 109   2      
 110   2                      if(xx==255)
 111   2                      {
 112   3                              xx=254;
 113   3                      }
 114   2                      else if(xx==0)
 115   2                      {
 116   3                              xx=1;
C51 COMPILER V9.01   DA_AD                                                                 04/27/2016 23:58:04 PAGE 3   

 117   3                      }
 118   2                      SendOneByte(xx);                //进行串口发送数据
 119   2                      SendOneByte(xx+1); 
 120   2                      SendOneByte(xx-1);    
 121   2              }
 122   1      }
 123          void UartInit(void)             //9600bps@11.0592MHz
 124          {
 125   1      
 126   1              SCON = 0x50;       //REN=1允许串行接受状态，串口工作模式2          
 127   1                  TMOD|= 0x20;      //定时器工作方式2                       
 128   1                      PCON|= 0x80;      //波特率提高一倍                                                    
 129   1                     
 130   1                  TH1 = 0xF9;                                 // //baud*2  /*  波特率4800、数据位8、停止位1。效验位无 (12M)
 131   1              TL1 = 0xF9; 
 132   1                      TR1  = 1;        //开启定时器1                                                      
 133   1                      ES   = 0;        //开串口中断                  
 134   1                      EA   = 1;        // 开总中断 
 135   1         }
 136          
 137          //******************************************************************/
 138          main()
 139          {
 140   1        EA=1;
 141   1        UartInit();
 142   1        Timer0Init();
 143   1      
 144   1       while(1)
 145   1       {/********以下AD-DA处理*************/ 
 146   2          switch(AD_CHANNEL)
 147   2         {
 148   3           case 0: ISendByte(PCF8591,0x41);
 149   3                   D[0]=IRcvByte(PCF8591);  //ADC0 模数转换1  放大2倍显示
 150   3                               xx=  D[0]/2;
 151   3                               break;  
 152   3       
 153   3               case 1: ISendByte(PCF8591,0x42);
 154   3                   D[1]=IRcvByte(PCF8591)*2;  //ADC1  模数转换2
 155   3                               break;  
 156   3      
 157   3               case 2: ISendByte(PCF8591,0x43);
 158   3                   D[2]=IRcvByte(PCF8591)*2;  //ADC2  模数转换3
 159   3                               break;  
 160   3      
 161   3               case 3: ISendByte(PCF8591,0x40);
 162   3                   D[3]=IRcvByte(PCF8591)*2;  //ADC3   模数转换4
 163   3                               break;  
 164   3      
 165   3               case 4: DACconversion(PCF8591,0x40, D[4]/4); //DAC       数模转换
 166   3                       break;
 167   3         }
 168   2      
 169   2                    // D[4]=400;  //数字--->>模拟输出
 170   2                         D[4]=D[0];  //   把模拟输入 采样的信号 通过数模转换输出
 171   2         if(++AD_CHANNEL>4) AD_CHANNEL=0;
 172   2       }  
 173   1      }
 174          
 175          
 176          


C51 COMPILER V9.01   DA_AD                                                                 04/27/2016 23:58:04 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    412    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     68       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
